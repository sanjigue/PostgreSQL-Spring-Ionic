package com.santiago.users.entity.models;

import java.io.Serializable;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;


@Entity
@Table(name = "res_partner")

public class Partner implements Serializable{
	
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer id;
	
	@NotEmpty
	private String name;
	
	 @OneToOne(fetch = FetchType.LAZY,
	            cascade =  CascadeType.ALL)
//	            ,
//	            mappedBy = "partner")
	@JoinColumn(name = "user_id")
	@JsonIgnoreProperties({ "partner", "login" ,"password"})
	private User user;

	@NotNull
	@Column(name = "country_id")
	private Integer countryId;

	@NotNull
	@Column(name = "create_uid")
	private Integer createUid;

	

	public Partner(Integer id, @NotEmpty String name, User user, @NotNull Integer countryId, @NotNull Integer createUid) {
		super();
		this.id = id;
		this.name = name;
		this.user = user;
		this.countryId = countryId;
		this.createUid = createUid;
	}

	public Partner() {
		
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	public Integer getCountryId() {
		return countryId;
	}

	public void setCountryId(Integer countryId) {
		this.countryId = countryId;
	}

	public Integer getCreateUid() {
		return createUid;
	}

	public void setCreateUid(Integer createUid) {
		this.createUid = createUid;
	}
	
	
	
	
	
}